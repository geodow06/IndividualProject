{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\src\\\\GenerateScramble.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nvar GenerateScramble =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GenerateScramble, _Component);\n\n  function GenerateScramble(props) {\n    var _this;\n\n    _classCallCheck(this, GenerateScramble);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenerateScramble).call(this, props));\n\n    _this.getAllRequest = function () {\n      axios.get('/getAllAlgorithms').then(function (r) {\n        _this.setState({\n          algorithms: r.data\n        });\n      });\n\n      for (var i = 0; i < _this.state.algorithms.length; i++) {\n        _this.setState({\n          idlist: [_this.state.idlist, _this.state.algorithms[i].userID]\n        });\n      }\n\n      for (var j = 0; j < _this.state.idlist.length; j++) {\n        console.log(_this.state.idlist[j]);\n      }\n    };\n\n    _this.state = {\n      algorithm: {},\n      algorithms: [],\n      idlist: []\n    };\n    return _this;\n  } //   getRequest = () => { \n  //     axios.get(`/getAnAlgorithm/${this.props.getid}`).then(r => { this.setState({ algorithm: r.data }) }); \n  //     console.log(this.state.algorithm.scramble);\n  //   }  \n\n\n  _createClass(GenerateScramble, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"the shit\" + this.props.getid);\n\n      if (!this.props.getid) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, this.getAllRequest, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"this is the value of the id entered \", this.props.getid), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, this.state.algorithm.scramble), React.createElement(\"button\", {\n          onClick: this.getRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"GetAnALgorithm\"));\n      }\n    }\n  }]);\n\n  return GenerateScramble;\n}(Component);\n\nexport default GenerateScramble;","map":{"version":3,"sources":["C:\\Users\\georg\\Documents\\GitHub\\IndividualProject\\reactrestart\\src\\GenerateScramble.js"],"names":["React","Component","axios","GenerateScramble","props","getAllRequest","get","then","r","setState","algorithms","data","i","state","length","idlist","userID","j","console","log","algorithm","getid","scramble","getRequest"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAKMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,UAiBnBC,aAjBmB,GAiBH,YAAI;AAClBH,MAAAA,KAAK,CAACI,GAAN,CAAU,mBAAV,EAA+BC,IAA/B,CAAoC,UAAAC,CAAC,EAAI;AAAC,cAAKC,QAAL,CAAc;AAACC,UAAAA,UAAU,EAAEF,CAAC,CAACG;AAAf,SAAd;AAAoC,OAA9E;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKC,KAAL,CAAWH,UAAX,CAAsBI,MAApC,EAA2CF,CAAC,EAA5C,EAA+C;AAC3C,cAAKH,QAAL,CAAc;AAACM,UAAAA,MAAM,EAAC,CAAC,MAAKF,KAAL,CAAWE,MAAZ,EAAmB,MAAKF,KAAL,CAAWH,UAAX,CAAsBE,CAAtB,EAAyBI,MAA5C;AAAR,SAAd;AACH;;AACD,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKJ,KAAL,CAAWE,MAAX,CAAkBD,MAAhC,EAAuCG,CAAC,EAAxC,EAA2C;AACvCC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWE,MAAX,CAAkBE,CAAlB,CAAZ;AACH;AACF,KAzBkB;;AAEjB,UAAKJ,KAAL,GAAa;AACXO,MAAAA,SAAS,EAAC,EADC;AAEXV,MAAAA,UAAU,EAAC,EAFA;AAGXK,MAAAA,MAAM,EAAC;AAHI,KAAb;AAFiB;AASlB,G,CAEH;AAEA;AACA;AACA;;;;;6BAcW;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAW,KAAKf,KAAL,CAAWiB,KAAlC;;AACA,UAAG,CAAC,KAAKjB,KAAL,CAAWiB,KAAf,EAAqB;AACjB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKhB,aADV,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAwC,KAAKD,KAAL,CAAWiB,KAAnD,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKR,KAAL,CAAWO,SAAX,CAAqBE,QAA1B,CAHJ,EAII;AAAQ,UAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,CADJ;AAQH;AAIF;;;;EA7C4BtB,S;;AAiD/B,eAAeE,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios'; \r\n\r\n\r\n\r\n\r\nclass GenerateScramble extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm:{},\r\n      algorithms:[], \r\n      idlist:[], \r\n      \r\n\r\n    }\r\n  }\r\n\r\n//   getRequest = () => { \r\n   \r\n//     axios.get(`/getAnAlgorithm/${this.props.getid}`).then(r => { this.setState({ algorithm: r.data }) }); \r\n//     console.log(this.state.algorithm.scramble);\r\n//   }  \r\n \r\n  getAllRequest = ()=>{ \r\n    axios.get('/getAllAlgorithms').then(r => {this.setState({algorithms: r.data})}); \r\n    for(let i=0;i<this.state.algorithms.length;i++){ \r\n        this.setState({idlist:[this.state.idlist,this.state.algorithms[i].userID]});\r\n    }\r\n    for(let j=0;j<this.state.idlist.length;j++){ \r\n        console.log(this.state.idlist[j]);\r\n    }\r\n  } \r\n  \r\n\r\n\r\n  render() { \r\n    console.log(\"the shit\"+this.props.getid);\r\n    if(!this.props.getid){\r\n        return(  \r\n            <div> \r\n                {this.getAllRequest}\r\n                <p>this is the value of the id entered {this.props.getid}</p>\r\n                <ul>{this.state.algorithm.scramble}</ul> \r\n                <button onClick={this.getRequest}>GetAnALgorithm</button>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n}\r\n\r\nexport default GenerateScramble; "]},"metadata":{},"sourceType":"module"}