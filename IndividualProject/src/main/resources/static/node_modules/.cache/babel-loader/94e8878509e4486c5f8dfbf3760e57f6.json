{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\src\\\\GetAnAlgorithm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport AlgorithmSetup from './AlgorithmSetup';\n\nvar GetAllTimes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GetAllTimes, _Component);\n\n  function GetAllTimes(props) {\n    var _this;\n\n    _classCallCheck(this, GetAllTimes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetAllTimes).call(this, props));\n\n    _this.getRequest = function () {\n      axios.get(\"/getAnAlgorithm/\".concat(_this.state.getID)).then(function (r) {\n        _this.setState({\n          algorithm: r.data\n        });\n      });\n    };\n\n    _this.setStates = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      console.log(\"An ID was submitted: \".concat(_this.state.getID));\n      event.preventDefault();\n    };\n\n    _this.state = {\n      getID: \"\",\n      algorihtm: {\n        algID: \"1time\",\n        name: \"\",\n        moves: \"1alg\",\n        scramble: \"\",\n        userID: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(GetAllTimes, [{\n    key: \"render\",\n    value: function render() {\n      // let times = this.state.times.map(t => <TimeListItems timeID={t.timeID} time={t.time} algID={t.algID} />) \n      var algorithm = this.state.algorithm.map(function (a) {\n        return React.createElement(AlgorithmSetup, {\n          algID: a.algID,\n          name: a.name,\n          moves: a.moves,\n          scramble: a.scramble,\n          userID: a.userID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"getID\",\n        target: \"one\",\n        className: \"form-control inputArea\",\n        onChange: this.setStates,\n        getID: this.state.getID,\n        id: \"getID\",\n        placeholder: \"getID *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: this.getRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, algorithm));\n    }\n  }]);\n\n  return GetAllTimes;\n}(Component);\n\nexport default GetAnAlgorithm;\n{\n  /* <ul>\r\n  {alorithm}\r\n  </ul>\r\n  <button onClick={this.getRequest}>Click</button>\r\n  <form onSubmit={this.handleSubmit} className=\"form-inline\">\r\n                 <label className=\"required\">* required </label>\r\n                 \r\n                 <label>\r\n                   <input type=\"text\" name='algName' target='one' className=\"form-control inputArea\" onChange={this.setStates} algName={this.state.algName} id=\"algName\" placeholder=\"AlgName *\"></input> \r\n                   <input type=\"text\" name='moves' target='two' className=\"form-control inputArea\" onChange={this.setStates} password={this.state.moves} id=\"moves\" placeholder=\"Moves *\"></input> \r\n                   <input type=\"text\" name='scramble' target='three' className=\"form-control inputArea\" onChange={this.setStates} username={this.state.scramble} id=\"scramble\" placeholder=\"Scramble *\"></input> \r\n                   <input type=\"text\" name='userID' target='four' className=\"form-control inputArea\" onChange={this.setStates} password={this.state.userId} id=\"userID\" placeholder=\"UserID *\"></input> \r\n                 </label> \r\n                 \r\n                 <input type=\"submit\" value=\"Submit\" onClick={this.pushRequest}/> \r\n                 \r\n             </form>  */\n}","map":{"version":3,"sources":["C:\\Users\\georg\\Documents\\GitHub\\IndividualProject\\reactrestart\\src\\GetAnAlgorithm.js"],"names":["React","Component","axios","AlgorithmSetup","GetAllTimes","props","getRequest","get","state","getID","then","r","setState","algorithm","data","setStates","event","target","name","value","handleSubmit","console","log","preventDefault","algorihtm","algID","moves","scramble","userID","map","a","GetAnAlgorithm"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAGMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UASnBC,UATmB,GASN,YAAM;AACjBJ,MAAAA,KAAK,CAACK,GAAN,2BAA6B,MAAKC,KAAL,CAAWC,KAAxC,GAAiDC,IAAjD,CAAsD,UAAAC,CAAC,EAAI;AAAE,cAAKC,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEF,CAAC,CAACG;AAAf,SAAd;AAAsC,OAAnG;AACD,KAXkB;;AAAA,UAanBC,SAbmB,GAaP,UAACC,KAAD,EAAS;AACnB,YAAKJ,QAAL,qBAAgBI,KAAK,CAACC,MAAN,CAAaC,IAA7B,EAAmCF,KAAK,CAACC,MAAN,CAAaE,KAAhD;AACD,KAfkB;;AAAA,UAiBnBC,YAjBmB,GAiBN,UAACJ,KAAD,EAAU;AACrBK,MAAAA,OAAO,CAACC,GAAR,gCAAoC,MAAKd,KAAL,CAAWC,KAA/C;AACAO,MAAAA,KAAK,CAACO,cAAN;AACD,KApBkB;;AAEjB,UAAKf,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,EADK;AAEXe,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBP,QAAAA,IAAI,EAAC,EAAvB;AAA0BQ,QAAAA,KAAK,EAAE,MAAjC;AAAyCC,QAAAA,QAAQ,EAAC,EAAlD;AAAqDC,QAAAA,MAAM,EAAC;AAA5D;AAFA,KAAb;AAFiB;AAOlB;;;;6BAeQ;AACP;AACA,UAAIf,SAAS,GAAG,KAAKL,KAAL,CAAWK,SAAX,CAAqBgB,GAArB,CAAyB,UAAAC,CAAC;AAAA,eAAE,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAEA,CAAC,CAACL,KAAzB;AAAgC,UAAA,IAAI,EAAEK,CAAC,CAACZ,IAAxC;AAA8C,UAAA,KAAK,EAAEY,CAAC,CAACJ,KAAvD;AAA8D,UAAA,QAAQ,EAAEI,CAAC,CAACH,QAA1E;AAAoF,UAAA,MAAM,EAAEG,CAAC,CAACF,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAF;AAAA,OAA1B,CAAhB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAM,QAAA,QAAQ,EAAE,KAAKR,YAArB;AAAmC,QAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,MAAM,EAAC,KAAzC;AAA+C,QAAA,SAAS,EAAC,wBAAzD;AAAkF,QAAA,QAAQ,EAAE,KAAKL,SAAjG;AAA4G,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAA9H;AAAqI,QAAA,EAAE,EAAC,OAAxI;AAAgJ,QAAA,WAAW,EAAC,SAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAE,KAAKH,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADN,EAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKO,SAAL,CARN,CADF;AAcD;;;;EAxCuBZ,S;;AA4C1B,eAAe8B,cAAf;AACA;AAAC;;;;;;;;;;;;;;;;;AAgBuB","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport AlgorithmSetup from './AlgorithmSetup';\r\n\r\n\r\nclass GetAllTimes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      getID:\"\",\r\n      algorihtm: { algID: \"1time\", name:\"\",moves: \"1alg\" ,scramble:\"\",userID:\"\" }\r\n\r\n    }\r\n  }\r\n\r\n  getRequest = () => {\r\n    axios.get(`/getAnAlgorithm/${this.state.getID}`).then(r => { this.setState({ algorithm: r.data }) });\r\n  } \r\n\r\n  setStates = (event)=>{ \r\n    this.setState({[event.target.name]:event.target.value});\r\n  }  \r\n\r\n  handleSubmit=(event) =>{ \r\n    console.log(`An ID was submitted: ${this.state.getID}`); \r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    // let times = this.state.times.map(t => <TimeListItems timeID={t.timeID} time={t.time} algID={t.algID} />) \r\n    let algorithm = this.state.algorithm.map(a=><AlgorithmSetup algID={a.algID} name={a.name} moves={a.moves} scramble={a.scramble} userID={a.userID}/>)\r\n    return (\r\n      <div>\r\n            <form onSubmit={this.handleSubmit} className=\"form-inline\">  \r\n                <label> \r\n                    <input type=\"number\" name='getID' target='one' className=\"form-control inputArea\" onChange={this.setStates} getID={this.state.getID} id=\"getID\" placeholder=\"getID *\"></input>\r\n                </label> \r\n                <input type=\"submit\" value=\"Submit\" onClick={this.getRequest}></input>\r\n\r\n            </form> \r\n            <ul>{algorithm}</ul>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default GetAnAlgorithm; \r\n{/* <ul>\r\n{alorithm}\r\n</ul>\r\n<button onClick={this.getRequest}>Click</button>\r\n<form onSubmit={this.handleSubmit} className=\"form-inline\">\r\n                <label className=\"required\">* required </label>\r\n                \r\n                <label>\r\n                  <input type=\"text\" name='algName' target='one' className=\"form-control inputArea\" onChange={this.setStates} algName={this.state.algName} id=\"algName\" placeholder=\"AlgName *\"></input> \r\n                  <input type=\"text\" name='moves' target='two' className=\"form-control inputArea\" onChange={this.setStates} password={this.state.moves} id=\"moves\" placeholder=\"Moves *\"></input> \r\n                  <input type=\"text\" name='scramble' target='three' className=\"form-control inputArea\" onChange={this.setStates} username={this.state.scramble} id=\"scramble\" placeholder=\"Scramble *\"></input> \r\n                  <input type=\"text\" name='userID' target='four' className=\"form-control inputArea\" onChange={this.setStates} password={this.state.userId} id=\"userID\" placeholder=\"UserID *\"></input> \r\n                </label> \r\n                \r\n                <input type=\"submit\" value=\"Submit\" onClick={this.pushRequest}/> \r\n                \r\n            </form>  */}"]},"metadata":{},"sourceType":"module"}