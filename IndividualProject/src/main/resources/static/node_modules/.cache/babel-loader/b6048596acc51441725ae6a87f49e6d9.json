{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\src\\\\GetAnAlgorithm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport AlgorithmSetup from './AlgorithmSetup';\nimport AlgorithmListItems from './AlgorithmsListItems';\nimport { isNull } from 'util';\n\nvar GetAnAlgorithm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GetAnAlgorithm, _Component);\n\n  function GetAnAlgorithm(props) {\n    var _this;\n\n    _classCallCheck(this, GetAnAlgorithm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetAnAlgorithm).call(this, props));\n\n    _this.getRequest = function () {\n      axios.get(\"/getAnAlgorithm/\".concat(_this.state.getid)).then(function (r) {\n        _this.setState({\n          algorithm: r.data\n        });\n      });\n    };\n\n    _this.setStates = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      console.log(\"An ID was submitted: \".concat(_this.state.getid));\n      event.preventDefault();\n    };\n\n    _this.state = {\n      getid: null,\n      algorithms: []\n    };\n    return _this;\n  }\n\n  _createClass(GetAnAlgorithm, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.getid) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Please enter an id to find a specific algorithm\"), React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"form-inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          name: \"getid\",\n          target: \"one\",\n          className: \"form-control inputArea\",\n          onChange: this.setStates,\n          getid: this.state.getid,\n          id: \"getID\",\n          placeholder: \"getID *\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: this.getRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })));\n      } else {\n        var algorithms = this.state.algorithms.map(function (a) {\n          return React.createElement(AlgorithmListItems, {\n            algid: a.algid,\n            name: a.name,\n            moves: a.moves,\n            scramble: a.scramble,\n            userid: a.userid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"form-inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          name: \"getid\",\n          target: \"one\",\n          className: \"form-control inputArea\",\n          onChange: this.setStates,\n          getid: this.state.getid,\n          id: \"getID\",\n          placeholder: \"getID *\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: this.getRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, algorithms), React.createElement(\"button\", {\n          onClick: this.getRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"GetAnALgorithm\"));\n      }\n    }\n  }]);\n\n  return GetAnAlgorithm;\n}(Component);\n\nexport default GetAnAlgorithm;","map":{"version":3,"sources":["C:\\Users\\georg\\Documents\\GitHub\\IndividualProject\\reactrestart\\src\\GetAnAlgorithm.js"],"names":["React","Component","axios","AlgorithmSetup","AlgorithmListItems","isNull","GetAnAlgorithm","props","getRequest","get","state","getid","then","r","setState","algorithm","data","setStates","event","target","name","value","handleSubmit","console","log","preventDefault","algorithms","map","a","algid","moves","scramble","userid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport AlgorithmSetup from './AlgorithmSetup'; \r\nimport AlgorithmListItems from './AlgorithmsListItems';\r\nimport { isNull } from 'util';\r\n\r\n\r\nclass GetAnAlgorithm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      getid:null,\r\n      algorithms: []\r\n\r\n    }\r\n  }\r\n\r\n  getRequest = () => {\r\n    axios.get(`/getAnAlgorithm/${this.state.getid}`).then(r => { this.setState({ algorithm: r.data }) });\r\n  }  \r\n \r\n\r\n  setStates = (event)=>{ \r\n    this.setState({[event.target.name]:event.target.value});\r\n  }  \r\n\r\n  handleSubmit=(event) =>{ \r\n    console.log(`An ID was submitted: ${this.state.getid}`); \r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.getid){\r\n        return(  \r\n            <div> \r\n                <p>Please enter an id to find a specific algorithm</p>\r\n                <form onSubmit={this.handleSubmit} className=\"form-inline\">  \r\n                <label> \r\n                    <input type=\"number\" name='getid' target='one' className=\"form-control inputArea\" onChange={this.setStates} getid={this.state.getid} id=\"getID\" placeholder=\"getID *\"></input>\r\n                </label> \r\n                <input type=\"submit\" value=\"Submit\" onClick={this.getRequest}></input>\r\n\r\n                </form> \r\n            </div>\r\n        );\r\n    } \r\n    else{ \r\n         \r\n        let algorithms = this.state.algorithms.map(a=><AlgorithmListItems algid={a.algid} name={a.name} moves={a.moves} scramble={a.scramble} userid={a.userid}/>)\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className=\"form-inline\">  \r\n                    <label> \r\n                        <input type=\"number\" name='getid' target='one' className=\"form-control inputArea\" onChange={this.setStates} getid={this.state.getid} id=\"getID\" placeholder=\"getID *\"></input>\r\n                    </label> \r\n                    <input type=\"submit\" value=\"Submit\" onClick={this.getRequest}></input>\r\n\r\n                </form> \r\n                <ul>{algorithms}</ul> \r\n                <button onClick={this.getRequest}>GetAnALgorithm</button>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n}\r\n\r\nexport default GetAnAlgorithm; \r\n"]},"metadata":{},"sourceType":"module"}