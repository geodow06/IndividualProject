{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\src\\\\GetAnAlgorithm.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport AlgorithmSetup from './AlgorithmSetup';\nimport AlgorithmListItems from './AlgorithmsListItems';\n\nvar GetAnAlgorithm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GetAnAlgorithm, _Component);\n\n  function GetAnAlgorithm(props) {\n    var _this;\n\n    _classCallCheck(this, GetAnAlgorithm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetAnAlgorithm).call(this, props));\n\n    _this.getRequest = function () {\n      axios.get(\"/getAnAlgorithm/\".concat(_this.state.getID)).then(function (r) {\n        _this.setState({\n          algorithm: r.data\n        });\n      });\n    };\n\n    _this.state = {\n      getID: 1,\n      algorithms: [{\n        algID: \"1time\",\n        name: \"\",\n        moves: \"1alg\",\n        scramble: \"\",\n        userID: \"\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(GetAnAlgorithm, [{\n    key: \"render\",\n    //   setStates = (event)=>{ \n    //     this.setState({[event.target.name]:event.target.value});\n    //   }  \n    //   handleSubmit=(event) =>{ \n    //     console.log(`An ID was submitted: ${this.state.getID}`); \n    //     event.preventDefault();\n    //   }\n    value: function render() {\n      // let times = this.state.times.map(t => <TimeListItems timeID={t.timeID} time={t.time} algID={t.algID} />) \n      var algorithms = this.state.algorithms.map(function (a) {\n        return React.createElement(AlgorithmListItems, {\n          algID: a.algID,\n          name: a.name,\n          moves: a.moves,\n          scramble: a.scramble,\n          userID: a.userID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, algorithm), React.createElement(\"button\", {\n        onClick: this.getRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Click\"));\n    }\n  }]);\n\n  return GetAnAlgorithm;\n}(Component);\n\nexport default GetAnAlgorithm;","map":{"version":3,"sources":["C:\\Users\\georg\\Documents\\GitHub\\IndividualProject\\reactrestart\\src\\GetAnAlgorithm.js"],"names":["React","Component","axios","AlgorithmSetup","AlgorithmListItems","GetAnAlgorithm","props","getRequest","get","state","getID","then","r","setState","algorithm","data","algorithms","algID","name","moves","scramble","userID","map","a"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;IAGMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UASnBC,UATmB,GASN,YAAM;AACjBL,MAAAA,KAAK,CAACM,GAAN,2BAA6B,MAAKC,KAAL,CAAWC,KAAxC,GAAiDC,IAAjD,CAAsD,UAAAC,CAAC,EAAI;AAAE,cAAKC,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEF,CAAC,CAACG;AAAf,SAAd;AAAsC,OAAnG;AACD,KAXkB;;AAEjB,UAAKN,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,CADK;AAEXM,MAAAA,UAAU,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,IAAI,EAAC,EAAvB;AAA0BC,QAAAA,KAAK,EAAE,MAAjC;AAAyCC,QAAAA,QAAQ,EAAC,EAAlD;AAAqDC,QAAAA,MAAM,EAAC;AAA5D,OAAD;AAFD,KAAb;AAFiB;AAOlB;;;;AAOH;AACA;AACA;AAEA;AACA;AACA;AACA;6BAEW;AACP;AACA,UAAIL,UAAU,GAAG,KAAKP,KAAL,CAAWO,UAAX,CAAsBM,GAAtB,CAA0B,UAAAC,CAAC;AAAA,eAAE,oBAAC,kBAAD;AAAoB,UAAA,KAAK,EAAEA,CAAC,CAACN,KAA7B;AAAoC,UAAA,IAAI,EAAEM,CAAC,CAACL,IAA5C;AAAkD,UAAA,KAAK,EAAEK,CAAC,CAACJ,KAA3D;AAAkE,UAAA,QAAQ,EAAEI,CAAC,CAACH,QAA9E;AAAwF,UAAA,MAAM,EAAEG,CAAC,CAACF,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAF;AAAA,OAA3B,CAAjB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,SAAL,CARN,EASM;AAAQ,QAAA,OAAO,EAAE,KAAKP,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATN,CADF;AAeD;;;;EA1C0BN,S;;AA8C7B,eAAeI,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport AlgorithmSetup from './AlgorithmSetup'; \r\nimport AlgorithmListItems from './AlgorithmsListItems';\r\n\r\n\r\nclass GetAnAlgorithm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      getID:1,\r\n      algorithms: [{ algID: \"1time\", name:\"\",moves: \"1alg\" ,scramble:\"\",userID:\"\" }]\r\n\r\n    }\r\n  }\r\n\r\n  getRequest = () => {\r\n    axios.get(`/getAnAlgorithm/${this.state.getID}`).then(r => { this.setState({ algorithm: r.data }) });\r\n  }  \r\n \r\n\r\n//   setStates = (event)=>{ \r\n//     this.setState({[event.target.name]:event.target.value});\r\n//   }  \r\n\r\n//   handleSubmit=(event) =>{ \r\n//     console.log(`An ID was submitted: ${this.state.getID}`); \r\n//     event.preventDefault();\r\n//   }\r\n\r\n  render() {\r\n    // let times = this.state.times.map(t => <TimeListItems timeID={t.timeID} time={t.time} algID={t.algID} />) \r\n    let algorithms = this.state.algorithms.map(a=><AlgorithmListItems algID={a.algID} name={a.name} moves={a.moves} scramble={a.scramble} userID={a.userID}/>)\r\n    return (\r\n      <div>\r\n            {/* <form onSubmit={this.handleSubmit} className=\"form-inline\">  \r\n                <label> \r\n                    <input type=\"number\" name='getID' target='one' className=\"form-control inputArea\" onChange={this.setStates} getID={this.state.getID} id=\"getID\" placeholder=\"getID *\"></input>\r\n                </label> \r\n                <input type=\"submit\" value=\"Submit\" onClick={this.getRequest}></input>\r\n\r\n            </form>  */}\r\n            <ul>{algorithm}</ul> \r\n            <button onClick={this.getRequest}>Click</button>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default GetAnAlgorithm; \r\n"]},"metadata":{},"sourceType":"module"}