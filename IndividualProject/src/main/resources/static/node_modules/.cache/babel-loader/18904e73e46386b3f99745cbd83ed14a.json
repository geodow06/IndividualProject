{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\src\\\\AddAlgorithm.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import '/roofpig_and_three.min.js'\n\nimport axios from 'axios';\n\nvar AddAlgorithm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddAlgorithm, _Component);\n\n  function AddAlgorithm(props) {\n    var _this;\n\n    _classCallCheck(this, AddAlgorithm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddAlgorithm).call(this, props));\n\n    _this.pushRequest = function () {\n      axios.post(\"/addAlgorithm/\".concat(_this.state.name, \"/\").concat(_this.state.moves, \"/\").concat(_this.state.scramble, \"/\").concat(_this.state.userID));\n    };\n\n    _this.setStates = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      console.log('A name was submitted: ' + _this.state.name);\n      console.log('A moves was submitted: ' + _this.state.moves);\n      console.log('A scramble was submitted: ' + _this.state.scramble);\n      console.log('A userID was submitted: ' + _this.state.userID);\n      event.preventDefault();\n    };\n\n    _this.state = {\n      name: '',\n      moves: '',\n      scramble: '',\n      userID: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddAlgorithm, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"* required \"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        type: \"text\",\n        name: \"name\",\n        target: \"one\",\n        className: \"form-control inputArea\",\n        onChange: this.setStates\n      }, _defineProperty(_React$createElement, \"name\", this.state.name), _defineProperty(_React$createElement, \"id\", \"name\"), _defineProperty(_React$createElement, \"placeholder\", \"name *\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"moves\",\n        target: \"two\",\n        className: \"form-control inputArea\",\n        onChange: this.setStates,\n        moves: this.state.moves,\n        id: \"moves\",\n        placeholder: \"Moves *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"scramble\",\n        target: \"three\",\n        className: \"form-control inputArea\",\n        onChange: this.setStates,\n        scramble: this.state.scramble,\n        id: \"scramble\",\n        placeholder: \"Scramble *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"userid\",\n        target: \"four\",\n        className: \"form-control inputArea\",\n        onChange: this.setStates,\n        userid: this.state.userid,\n        id: \"userid\",\n        placeholder: \"UserID *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: this.pushRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddAlgorithm;\n}(Component);\n\nexport default AddAlgorithm;","map":{"version":3,"sources":["C:\\Users\\georg\\Documents\\GitHub\\IndividualProject\\reactrestart\\src\\AddAlgorithm.js"],"names":["React","Component","axios","AddAlgorithm","props","pushRequest","post","state","name","moves","scramble","userID","setStates","event","setState","target","value","handleSubmit","console","log","preventDefault","userid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css'; \r\n// import '/roofpig_and_three.min.js'\r\nimport axios from 'axios';\r\n\r\nclass AddAlgorithm extends Component { \r\n  constructor(props){ \r\n    super(props); \r\n    this.state = { \r\n      name:'', \r\n      moves:'',  \r\n      scramble:'',\r\n      userID:''\r\n    }\r\n  }\r\n\r\n\r\n\r\n    pushRequest = ()=>{ \r\n     \r\n      axios.post(`/addAlgorithm/${this.state.name}/${this.state.moves}/${this.state.scramble}/${this.state.userID}`); \r\n      \r\n    } \r\n\r\n    setStates = (event)=>{ \r\n      this.setState({[event.target.name]:event.target.value});\r\n    } \r\n\r\n    handleSubmit=(event) =>{ \r\n      console.log('A name was submitted: ' + this.state.name); \r\n      console.log('A moves was submitted: '+ this.state.moves); \r\n      console.log('A scramble was submitted: '+ this.state.scramble); \r\n      console.log('A userID was submitted: '+ this.state.userID);\r\n      event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div> \r\n            <form onSubmit={this.handleSubmit} className=\"form-inline\">\r\n                <label className=\"required\">* required </label>\r\n                \r\n                <label>\r\n                  <input type=\"text\" name='name' target='one' className=\"form-control inputArea\" onChange={this.setStates} name={this.state.name} id=\"name\" placeholder=\"name *\"></input> \r\n                  <input type=\"text\" name='moves' target='two' className=\"form-control inputArea\" onChange={this.setStates} moves={this.state.moves} id=\"moves\" placeholder=\"Moves *\"></input> \r\n                  <input type=\"text\" name='scramble' target='three' className=\"form-control inputArea\" onChange={this.setStates} scramble={this.state.scramble} id=\"scramble\" placeholder=\"Scramble *\"></input> \r\n                  <input type=\"text\" name='userid' target='four' className=\"form-control inputArea\" onChange={this.setStates} userid={this.state.userid} id=\"userid\" placeholder=\"UserID *\"></input> \r\n                </label> \r\n                \r\n                <input type=\"submit\" value=\"Submit\" onClick={this.pushRequest}/> \r\n                \r\n            </form> \r\n        </div>\r\n      );\r\n    } \r\n  }\r\n  \r\n  export default AddAlgorithm;"]},"metadata":{},"sourceType":"module"}