{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\georg\\\\Documents\\\\GitHub\\\\IndividualProject\\\\reactrestart\\\\src\\\\GenerateScramble.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nvar GenerateScramble =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GenerateScramble, _Component);\n\n  function GenerateScramble(props) {\n    var _this;\n\n    _classCallCheck(this, GenerateScramble);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenerateScramble).call(this, props));\n\n    _this.getAllRequest = function () {\n      axios.get('/getAllAlgorithms').then(function (r) {\n        _this.setState({\n          algorithms: r.data\n        });\n      });\n\n      for (var i = 0; i < _this.state.algorithms.length; i++) {\n        console.log(_this.state.algorithms[i].userID);\n\n        _this.setState({\n          idlist: [_this.state.idlist, _this.state.algorithms[i].userID]\n        });\n      }\n\n      for (var j = 0; j < _this.state.idlist.length; j++) {\n        console.log(_this.state.idlist[j]);\n      }\n    };\n\n    _this.nextScramble = function () {\n      _this.setState({\n        currentid: Math.random(_this.state.idlist.length)\n      });\n    };\n\n    _this.state = {\n      algorithm: {},\n      algorithms: [],\n      idlist: [],\n      currentid: null\n    };\n    return _this;\n  } //   getRequest = () => { \n  //     axios.get(`/getAnAlgorithm/${this.props.getid}`).then(r => { this.setState({ algorithm: r.data }) }); \n  //     console.log(this.state.algorithm.scramble);\n  //   }  \n\n\n  _createClass(GenerateScramble, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.currentid) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, this.getAllRequest, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, this.state.algorithms[this.state.currentid].scramble));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, this.getAllRequest, React.createElement(\"button\", {\n          onClick: this.nextScramble,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"click to begin\"));\n      }\n    }\n  }]);\n\n  return GenerateScramble;\n}(Component);\n\nexport default GenerateScramble;","map":{"version":3,"sources":["C:\\Users\\georg\\Documents\\GitHub\\IndividualProject\\reactrestart\\src\\GenerateScramble.js"],"names":["React","Component","axios","GenerateScramble","props","getAllRequest","get","then","r","setState","algorithms","data","i","state","length","console","log","userID","idlist","j","nextScramble","currentid","Math","random","algorithm","scramble"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAKMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,UAkBnBC,aAlBmB,GAkBH,YAAI;AAClBH,MAAAA,KAAK,CAACI,GAAN,CAAU,mBAAV,EAA+BC,IAA/B,CAAoC,UAAAC,CAAC,EAAI;AAAC,cAAKC,QAAL,CAAc;AAACC,UAAAA,UAAU,EAAEF,CAAC,CAACG;AAAf,SAAd;AAAoC,OAA9E;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKC,KAAL,CAAWH,UAAX,CAAsBI,MAApC,EAA2CF,CAAC,EAA5C,EAA+C;AAC3CG,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWH,UAAX,CAAsBE,CAAtB,EAAyBK,MAArC;;AACA,cAAKR,QAAL,CAAc;AAACS,UAAAA,MAAM,EAAC,CAAC,MAAKL,KAAL,CAAWK,MAAZ,EAAmB,MAAKL,KAAL,CAAWH,UAAX,CAAsBE,CAAtB,EAAyBK,MAA5C;AAAR,SAAd;AACH;;AACD,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKN,KAAL,CAAWK,MAAX,CAAkBJ,MAAhC,EAAuCK,CAAC,EAAxC,EAA2C;AACvCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWK,MAAX,CAAkBC,CAAlB,CAAZ;AACH;AACF,KA3BkB;;AAAA,UA6BnBC,YA7BmB,GA6BN,YAAK;AACd,YAAKX,QAAL,CAAc;AAACY,QAAAA,SAAS,EAACC,IAAI,CAACC,MAAL,CAAY,MAAKV,KAAL,CAAWK,MAAX,CAAkBJ,MAA9B;AAAX,OAAd;AACH,KA/BkB;;AAEjB,UAAKD,KAAL,GAAa;AACXW,MAAAA,SAAS,EAAC,EADC;AAEXd,MAAAA,UAAU,EAAC,EAFA;AAGXQ,MAAAA,MAAM,EAAC,EAHI;AAIXG,MAAAA,SAAS,EAAC;AAJC,KAAb;AAFiB;AAUlB,G,CAEH;AAEA;AACA;AACA;;;;;6BAiBW;AAEP,UAAG,KAAKR,KAAL,CAAWQ,SAAd,EAAwB;AACpB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKhB,aADV,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKQ,KAAL,CAAWH,UAAX,CAAsB,KAAKG,KAAL,CAAWQ,SAAjC,EAA4CI,QAAjD,CAHJ,CADJ;AAQH,OATD,MAUI;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKpB,aADV,EAEI;AAAQ,UAAA,OAAO,EAAE,KAAKe,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CADF;AAMH;AAIF;;;;EAzD4BnB,S;;AA6D/B,eAAeE,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios'; \r\n\r\n\r\n\r\n\r\nclass GenerateScramble extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      algorithm:{},\r\n      algorithms:[], \r\n      idlist:[], \r\n      currentid:null\r\n      \r\n\r\n    }\r\n  }\r\n\r\n//   getRequest = () => { \r\n   \r\n//     axios.get(`/getAnAlgorithm/${this.props.getid}`).then(r => { this.setState({ algorithm: r.data }) }); \r\n//     console.log(this.state.algorithm.scramble);\r\n//   }  \r\n \r\n  getAllRequest = ()=>{ \r\n    axios.get('/getAllAlgorithms').then(r => {this.setState({algorithms: r.data})}); \r\n    for(let i=0;i<this.state.algorithms.length;i++){ \r\n        console.log(this.state.algorithms[i].userID)\r\n        this.setState({idlist:[this.state.idlist,this.state.algorithms[i].userID]});\r\n    }\r\n    for(let j=0;j<this.state.idlist.length;j++){ \r\n        console.log(this.state.idlist[j]);\r\n    }\r\n  } \r\n  \r\n  nextScramble=()=> { \r\n      this.setState({currentid:Math.random(this.state.idlist.length)});\r\n  }\r\n\r\n  render() { \r\n\r\n    if(this.state.currentid){\r\n        return(  \r\n            <div> \r\n                {this.getAllRequest}\r\n               \r\n                <ul>{this.state.algorithms[this.state.currentid].scramble}</ul> \r\n            \r\n            </div> \r\n        );\r\n    } \r\n    else{ \r\n        return( \r\n          <div>  \r\n              {this.getAllRequest}\r\n              <button onClick={this.nextScramble}>click to begin</button> \r\n          </div>   \r\n        );\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n}\r\n\r\nexport default GenerateScramble; "]},"metadata":{},"sourceType":"module"}